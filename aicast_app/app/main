#!/usr/bin/python3
import actfw_core
import consts
from actfw_core.capture import V4LCameraCapture
from tasks import Drawer, Predictor, Presenter


def main():
    # Actcast application
    app = actfw_core.Application()

    # Load act setting
    settings = app.get_settings({
        'rotation': 0,
        'hflip': False,
        'display': True,
        'exposure_time': 0,
        'thresh': 0.35
    })
    if settings['exposure_time'] <= 0:
        settings['exposure_time'] = None

    cmd = actfw_core.CommandServer()
    app.register_task(cmd)

    cap = V4LCameraCapture(
        '/dev/video0', (consts.CAPTURE_WIDTH, consts.CAPTURE_HEIGHT), 30)
    capture_size = cap.capture_size()

    def config(video):
        video.set_rotation(settings['rotation'])
        video.set_horizontal_flip(settings['hflip'])
        video.set_exposure_time(settings['exposure_time'])
    cap.configure(config)
    app.register_task(cap)

    # Predictor task
    conv = Predictor(settings, capture_size)
    app.register_task(conv)

    draw = Drawer()
    app.register_task(draw)

    pres = Presenter(
        cmd,
        use_display=settings['display'],
        display_size=(consts.DISPLAY_WIDTH, consts.DISPLAY_HEIGHT)
    )
    app.register_task(pres)
    cap.connect(conv)
    conv.connect(draw)
    draw.connect(pres)
    app.run()


if __name__ == '__main__':
    main()
